// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_DATABASE_URL")
}

model User {
  id        String       @id @default(uuid())
  name      String
  username  String       @unique
  password  String
  roles     UserRole[]
  regions   UserRegion[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model Role {
  id          String           @id @default(uuid())
  name        String
  permissions RolePermission[]
  users       UserRole[]
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
}

model Permission {
  id          String           @id @default(uuid())
  name        String
  label       String
  description String?
  roles       RolePermission[]
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
}

model RolePermission {
  roleId       String
  permissionId String

  role       Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  @@id([roleId, permissionId])
}

model UserRole {
  userId String
  roleId String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  role Role @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@id([roleId, userId])
}

model Region {
  id        String       @id @default(uuid())
  name      String
  coverage  String[]
  users     UserRegion[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model UserRegion {
  userId   String
  regionId String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  region Region @relation(fields: [regionId], references: [id], onDelete: Cascade)

  @@id([regionId, userId])
}
