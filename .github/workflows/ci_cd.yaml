name: CI/CD MQKAN

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run Prisma Migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_DATABASE_URL: ${{ secrets.DIRECT_DATABASE_URL }}
        run: |
          for i in {1..3}; do
            npx prisma migrate deploy && break
            echo "Migration failed, retrying in 5 seconds ($i/3)..."
            sleep 5
          done
      - name: Build Next.js application
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_DATABASE_URL: ${{ secrets.DIRECT_DATABASE_URL }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          AUTH_TRUST_HOST: ${{ secrets.AUTH_TRUST_HOST }}
          NEXTAUTH_URL: ${{ secrets.AUTH_TRUST_HOST }}
        run: pnpm build
      - name: Check .next directory
        run: |
          if [ -d ".next" ]; then
            echo ".next directory exists"
            ls -la .next
          else
            echo "Error: .next directory not found"
            exit 1
          fi
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: |
            .next/
            public/
            package.json
            pnpm-lock.yaml

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
      - name: Check downloaded files
        run: |
          ls -la
          if [ -d ".next" ]; then
            echo ".next directory found"
          else
            echo "Error: .next directory not downloaded"
            exit 1
          fi
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
      - name: Deploy to VPS
        run: |
          ls -la # Debug: lihat isi direktori sebelum rsync
          rsync -avz --delete .next/ public/ package.json pnpm-lock.yaml azkal@165.22.106.176:/home/azkal/project/mqkan/
          ssh -tt azkal@165.22.106.176 << 'EOF'
            cd /home/azkal/project/mqkan
            if [ ! -d ".git" ]; then
              git clone https://github.com/azkal182/mqkan.git .
              git checkout main
            else
              git checkout main
              git pull origin main
            fi
            npm install -g pnpm
            pnpm install --production
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
            echo "DIRECT_DATABASE_URL=${{ secrets.DIRECT_DATABASE_URL }}" >> .env
            echo "NEXTAUTH_URL=${{ secrets.AUTH_TRUST_HOST }}" >> .env
            echo "AUTH_TRUST_HOST=${{ secrets.AUTH_TRUST_HOST }}" >> .env
            echo "AUTH_SECRET=${{ secrets.AUTH_SECRET }}" >> .env
            if pm2 describe mqkan > /dev/null; then
              pm2 stop mqkan
              pm2 delete mqkan
            fi
            pm2 start npm --name "mqkan" -- start -- -p 7070
            exit
          EOF
      - name: Verify Deployment
        run: |
          ssh azkal@165.22.106.176 "pm2 logs mqkan --lines 10"
